name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write


jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, aarch64]
        exclude:
          # Windows Zig does not cross-compile to aarch64 by default
          - os: windows-latest
            arch: aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.15.1

      - name: Build binary
        run: |
          zig build -Dtarget=${{ matrix.arch }}-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || matrix.os == 'windows-latest' && 'windows' }}

      - name: Rename binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv ./zig-out/bin/toc.exe toc-${{ matrix.os }}-${{ matrix.arch }}.exe
          else
            mv ./zig-out/bin/toc toc-${{ matrix.os }}-${{ matrix.arch }}
          fi
          # OR, for a cross-shell solution:
          # [ -f ./zig-out/bin/toc.exe ] && mv ./zig-out/bin/toc.exe toc-${{ matrix.os }}-${{ matrix.arch }}.exe || mv ./zig-out/bin/toc toc-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: toc-${{ matrix.os }}-${{ matrix.arch }}
          path: toc-${{ matrix.os }}-${{ matrix.arch }}*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List artifacts
        run: ls ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
